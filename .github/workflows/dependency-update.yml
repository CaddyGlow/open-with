name: Dependency Updates

on:
  schedule:
    - cron: "0 1 * * 1" # Every Monday at 1 AM
  workflow_dispatch:

jobs:
  update-dependencies:
    name: Update Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-edit
        uses: taiki-e/install-action@cargo-edit

      - name: Install cargo-outdated
        uses: taiki-e/install-action@cargo-outdated

      - name: Check for outdated dependencies
        run: |
          echo "## Outdated Dependencies" > outdated-report.md
          cargo outdated --format json > outdated.json

          if [[ $(jq '.dependencies | length' outdated.json) -gt 0 ]]; then
            echo "Found outdated dependencies"
            jq -r '.dependencies[] | "- \(.name): \(.project) -> \(.latest)"' outdated.json >> outdated-report.md
          else
            echo "All dependencies are up to date"
            echo "All dependencies are up to date" >> outdated-report.md
          fi

      - name: Update dependencies
        run: |
          # Update patch versions only for safety
          cargo update

          # Check if Cargo.lock changed
          if git diff --quiet Cargo.lock; then
            echo "No dependency updates available"
            echo "HAS_UPDATES=false" >> $GITHUB_ENV
          else
            echo "Dependencies updated"
            echo "HAS_UPDATES=true" >> $GITHUB_ENV
          fi

      - name: Run tests with updated dependencies
        if: env.HAS_UPDATES == 'true'
        run: |
          cargo test --all-features
          cargo clippy --all-targets --all-features -- -D warnings

      - name: Create Pull Request
        if: env.HAS_UPDATES == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update dependencies"
          title: "chore: update dependencies"
          body: |
            ## Automated Dependency Update

            This PR updates dependencies to their latest compatible versions.

            ### Changes
            - Updated Cargo.lock with latest compatible versions

            ### Testing
            - âœ… All tests pass
            - âœ… Clippy checks pass

            ### Review Notes
            Please review the changes and ensure no breaking changes were introduced.

            ---
            *This PR was created automatically by the dependency update workflow.*
          branch: automated/dependency-updates
          delete-branch: true

  check-security-updates:
    name: Check Security Updates
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cargo-audit
        uses: taiki-e/install-action@cargo-audit

      - name: Check for security advisories
        run: |
          if ! cargo audit --deny warnings; then
            echo "SECURITY_UPDATES_NEEDED=true" >> $GITHUB_ENV
            cargo audit --json > security-report.json
          else
            echo "SECURITY_UPDATES_NEEDED=false" >> $GITHUB_ENV
          fi

      - name: Create security update issue
        if: env.SECURITY_UPDATES_NEEDED == 'true'
        uses: actions/github-script@v8
        with:
          script: |
            const fs = require('fs');
            let securityReport = '';

            try {
              const report = JSON.parse(fs.readFileSync('security-report.json', 'utf8'));
              securityReport = JSON.stringify(report, null, 2);
            } catch (e) {
              securityReport = 'Failed to parse security report';
            }

            const title = 'ðŸš¨ Security Advisory: Dependencies Need Updates';
            const body = `## Security Advisory Detected

            Automated security scan detected vulnerabilities in dependencies.

            ### Details
            \`\`\`json
            ${securityReport}
            \`\`\`

            ### Action Required
            Please review and update the affected dependencies as soon as possible.

            ### Next Steps
            1. Review the security advisory details
            2. Update affected dependencies
            3. Test the application thoroughly
            4. Deploy the fixes

            ---
            *This issue was created automatically by the security monitoring workflow.*`;

            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['security', 'dependencies', 'high-priority']
            });
